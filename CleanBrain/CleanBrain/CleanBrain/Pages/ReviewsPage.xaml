<Page x:Class="CleanBrain.Pages.ReviewsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CleanBrain.Pages"
      xmlns:vm="clr-namespace:CleanBrain.MVVM"
      xmlns:uc ="clr-namespace:CleanBrain.UserControlItems"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      mc:Ignorable="d" 
      d:DesignHeight="884" d:Width="1013"
      Title="ReviewsPage">


  

    <Border Background="{DynamicResource MainColor}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">



        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition  Height="60"/>
                <RowDefinition  Height="300*"/>
            </Grid.RowDefinitions>

            <ListView Background="{DynamicResource MainColor}" HorizontalAlignment="Stretch" MaxWidth ="1920" Grid.Column="0" Grid.Row="1"  BorderThickness="0" HorizontalContentAlignment="Center" ItemsSource="{Binding List}" SelectedItem="{Binding SelectReview,UpdateSourceTrigger=PropertyChanged}" ScrollViewer.HorizontalScrollBarVisibility ="Disabled">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="border">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <EventSetter Event="PreviewMouseDown" Handler="OnPreviewMouseDown"/>
                    </Style>

                </ListView.ItemContainerStyle>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Center" ItemWidth="Auto" ItemHeight="Auto"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate >
                        <uc:RevItem  Height="240" MinWidth="600" Margin="10 10" MaxWidth="800"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListView>
            <Border Background="Black" Opacity="0.7" Height="60" Grid.Row="0" VerticalAlignment="Top">
                <TextBlock Style="{StaticResource TextGreetingMainLogo}" Grid.Row="0" Text="{DynamicResource ReviewLogo}" VerticalAlignment="Center" TextAlignment="Center" HorizontalAlignment="Center" Height="38" />
            </Border>
            <Button Visibility="{Binding Active,Converter={StaticResource BooleanToVisibilityConverter},UpdateSourceTrigger=PropertyChanged}"  Style="{StaticResource MenuButton}" Command="{Binding AddReview}" Name="exit"  Width="160" Height="40" Grid.Row="0" HorizontalAlignment="Right" Margin="10 0" >
                <StackPanel  Width="308">
                    <Label HorizontalAlignment="Center" Content="{DynamicResource ProceduresButton}" Width="241" Height="36" FontSize="20" RenderTransformOrigin="0.5,0.501"/>
                </StackPanel>
            </Button>
            <Border Name="BackgroundOverlay" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.RowSpan="2" Opacity="0.5" Background="#99000000" Visibility="{Binding IsFrameVisible, Converter={StaticResource BooleanToVisibilityConverter},UpdateSourceTrigger=PropertyChanged  }" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <i:InvokeCommandAction Command="{Binding CloseBorderClick}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Border>
            <Frame  Visibility="{Binding IsFrameVisible, Converter={StaticResource BooleanToVisibilityConverter},UpdateSourceTrigger=PropertyChanged }" NavigationUIVisibility ="Hidden"  Name="ReviewFrame" Grid.RowSpan="2"  HorizontalAlignment="Center" VerticalAlignment="Center" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="ContentRendered">
                        <i:InvokeCommandAction Command="{Binding CloseBorder}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Frame>
        </Grid>
    </Border>
</Page>